//@ sourceMappingURL=exceptions.map
// Generated by CoffeeScript 1.6.1
var AuthenticationError, AuthorizationError, DownForMaintenanceError, InvalidSignatureError, InvalidTransparentRedirectHashError, NotFoundError, ServerError, UnexpectedError, UpgradeRequired, errorTypes;

errorTypes = require('./error_types');

AuthenticationError = function() {
  return {
    message: 'Authentication Error',
    type: errorTypes.authenticationError
  };
};

AuthorizationError = function() {
  return {
    message: 'Authorization Error',
    type: errorTypes.authorizationError
  };
};

DownForMaintenanceError = function() {
  return {
    message: 'Down for Maintenance',
    type: errorTypes.downForMaintenanceError
  };
};

InvalidSignatureError = function() {
  return {
    message: 'Invalid Signature',
    type: errorTypes.invalidSignatureError
  };
};

InvalidTransparentRedirectHashError = function() {
  return {
    message: 'The transparent redirect hash is invalid.',
    type: errorTypes.invalidTransparentRedirectHashError
  };
};

NotFoundError = function() {
  return {
    message: 'Not Found',
    type: errorTypes.notFoundError
  };
};

ServerError = function() {
  return {
    message: 'Server Error',
    type: errorTypes.serverError
  };
};

UnexpectedError = function(message) {
  return {
    message: message,
    type: errorTypes.unexpectedError
  };
};

UpgradeRequired = function() {
  return {
    message: 'This version of the node library is no longer supported.',
    type: errorTypes.upgradeRequired
  };
};

exports.AuthenticationError = AuthenticationError;

exports.AuthorizationError = AuthorizationError;

exports.DownForMaintenanceError = DownForMaintenanceError;

exports.InvalidTransparentRedirectHashError = InvalidTransparentRedirectHashError;

exports.InvalidSignatureError = InvalidSignatureError;

exports.NotFoundError = NotFoundError;

exports.ServerError = ServerError;

exports.UnexpectedError = UnexpectedError;

exports.UpgradeRequired = UpgradeRequired;
